# Skript Header File
# About Basic Minecraft Functions



#> 한글 닉네임을 UUID로 변환
#> requirements : Nickname System
#> YUMC 서버와 통신, text from "YUMC_backserver_DB_site" 이후 {nick::%uuid of player%}에 담음
#> @return 플레이어 uuid
#> @param t 플레이어 한글 닉네임
function HangulToUUID(t:text) :: text:
    loop {nick::*}:
        if loop-value is {_t}:
            set {_value} to loop-index
            exit loop
    return {_value}


#> UUID를 username으로 변환
#> @return player username
#> @param id uuid of player
function uuidToUsername(id: text) :: offline player:
    set {_player} to "%{_id}%" parsed as offline player
    return {_player}


#> 좌표 위치에 블록 생성
#> @param world 작동시킬 월드 이름
#> @param block 설치할 블록 이름
#> @param x x좌표
#> @param y y좌표
#> @param z z좌표
function setBlock(world: text, block: item, x: integer, y: integer, z: integer):
    set block at location at {_x}, {_y}, {_z} in world "%{_world}%" to {_block}



#> 출처 : https://www.koreaminecraft.net/plugin_lecture/2704259
#> 좌표로 이동하면서 동시에 특정 엔티티 방향으로 Facing
#> 아래 사용된 atan2() 함수는 아마 Skript에서 기본으로 제공해주는 함수일듯
#> 탄젠트의 역함수 arctan(아크탄젠트)를 구현한 함수 (기울기 입력 -> 각도 return)
#> @param e 엔티티 위치(가능한 한 tp 이후 엔티티의 위치를 지정하도록)
#> @param l 바라볼 위치(location() 함수를 사용하여 하는 것이 좋음. 기준 좌표보다 2미터 위를 바라봄)
function facing2(e: entity, l: location):
    set {_loc} to location of {_e}
    set {_x} to x location of {_l} - x location of {_loc}
    set {_y} to y location of {_l} - y location of {_loc}
    set {_z} to z location of {_l} - z location of {_loc}
    set {_yaw.tan} to atan2({_x}, {_z})
    set yaw of {_loc} to {_yaw.tan} - 90
    set {_pit.dis} to ({_x} ^ 2 + {_z} ^ 2) ^ (1 / 2)
    set {_pit.tan} to atan2({_pit.dis}, {_y})
    set pitch of {_loc} to {_pit.tan} * -1
    teleport {_e} at {_loc}



#> 플레이 사운드
#> @param sound 출력할 사운드
#> @param p 플레이어
function onPlaySoundEvent(sound: text, p: player):
    play sound "%{_sound}%" with volume 1 with pitch 1 to {_p}



#> 플레이 사운드 옵셔널
#> @param sound 출력할 사운드
#> @param p 플레이어
#> @param v 볼륨
#> @param pt 피치
function onOptionalPlaySoundEvent(sound: text, p: player, v: integer, pt: integer):
    play sound "%{_sound}%" with volume {_v} with pitch {_pt} to {_p}


#> 아이템 지급
#> @param p 플레이어
#> @param amount 수량
#> @param item 아이템
#> @param name 이름
#> @param lore 설명
function giveItemToPlayer(p: player, amount: integer, item: item, name: text, lore: text):
    give {_p} {_amount} of {_item} named {_name} with lore {_lore}

#> 아이템 NBT 태그와 함께 지급
#> @param p 플레이어
#> @param amount 수량
#> @param item 아이템
#> @param name 이름
#> @param lore 설명
#> @param custom 커스텀 모델 데이터
function giveItemToPlayerWithNbt(p: player, amount: integer, item: item, name: text, lore: text, custom: integer):
    give {_p} {_amount} of {_item} named {_name} with lore {_lore} with custom model data {_custom}

#> 아이템 NBT 태그와 함께 지급 + unbreakable
#> 파라미터는 위와 동일
function giveInfiniteItemToPlayerWithNbt(p: player, amount: integer, item: item, name: text, lore: text, custom: integer):
    set {_temp} to unbreakable {_item} named {_name} with lore {_lore} with custom model data {_custom}
    give {_temp} to {_p}


#> 커스텀 레시피 추가
#> @param m 모드 (1이상 shaped, 0이하 shapeless)
#> @param item 레시피 대상 아이템
#> @param id 레시피 아이디
#> @param 1~9 레시피 재료
function addAdditionalRecipe(m: integer, item: item, id: text, 1: item, 2: item, 3: item, 4: item, 5: item, 6: item, 7: item, 8: item, 9: item):
    if {_m} >= 1:
        register new shaped recipe for {_item} using {_1}, {_2}, {_3}, {_4}, {_5}, {_6}, {_7}, {_8} and {_9} with id {_id}
    else if {_m} <= 0:
        register new shapeless recipe for {_item} using {_1}, {_2}, {_3}, {_4}, {_5}, {_6}, {_7}, {_8} and {_9} with id {_id}


#> 커스텀 레시피 삭제
#> @param id 레시피 아이디
function subAdditionalRecipe(id: text):
    remove custom recipe {_id}

